---
#- name: Step 00xxxxx software
#  hosts: localhost
#  gather_facts: False
#  become: false
#  tasks:
#    - debug:
#        msg: "Software tasks Started"

- name: Create and attach additional volumes for Stratis
  hosts: localhost
  connection: local
  become: false
  environment:
    OS_AUTH_URL: "{{ osp_auth_url }}"
    OS_USERNAME: "{{ osp_auth_username }}"
    OS_PASSWORD: "{{ osp_auth_password }}"
    OS_PROJECT_NAME: "{{ osp_project_name }}"
    OS_PROJECT_DOMAIN_ID: "{{ osp_auth_project_domain }}"
    OS_USER_DOMAIN_NAME: "{{ osp_auth_user_domain }}"

  tasks:
    - name: Create additional block dev volumes for Stratis lab
      command: "{{ item }}"
      with_items:
        - openstack volume create --size 5 disk1
        - openstack volume create --size 5 disk2
        - openstack volume create --size 5 disk3
        - openstack volume create --size 5 disk4
        - openstack server add volume node2 disk1
        - openstack server add volume node2 disk2
        - openstack server add volume node2 disk3
        - openstack server add volume node2 disk4
#      register: reg_out
#    - debug: msg="{{ reg_out.stdout }}"


- name: fix ssh config from Host .example.com to Host 
  hosts: all
  become: yes
  tasks: 
    - name: replace old example.com line
      lineinfile:
        path: /root/.ssh/config
        regexp: '^Host.*example.com$'
        line: 'Host *'


###
### RHEL8-Workshop stuff
###
- name: copy and run RHEL8-Workshop playbooks on "workstation" to set up vms
  hosts: workstation
  become: yes
  tasks:

  - name: Copy file with owner and permission, using symbolic representation
    copy:
      src: RHEL8-Workshop.tgz
      dest: /tmp/RHEL8-Workshop.tgz

  - name: Change the working directory to RHEL8-Workshop, then run the prep/install script
    shell: "cd /tmp; tar -xzf RHEL8-Workshop.tgz; cd RHEL8-Workshop; cp sample-configs/rhel8-workshop config/rhel8-workshop; /bin/bash prepare-rhel8-workshop.sh > prepare-rhel8-workshop.log"





### !!!  need to move to destroy yml !!!  ###
#- name: unregister from Satellite
#  hosts: all
#  become: yes
#  tasks:
#    - name: call module to unregister
#      redhat_subscription:
#        state: absent


- name: Software flight-check
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  tags:
    - post_flight_check
  tasks:
    - debug:
        msg: "Software checks completed successfully"
